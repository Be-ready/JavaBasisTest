《Head First 设计模式（中文版）》
第3部分：
    装饰对象：装饰者模式
    装饰者模式动态的将责任附加到对象上。若要扩展功能，装饰者提供了比继承更有弹性的替代方案
    装饰者和被装饰者必须是一样的类型（拥有共同的超类）
    包括：抽象组件，抽象装饰者，具体组件，具体装饰者；其中具体装饰者中需要有一个具体组件的实例变量（具体装饰者需要装饰具体组件）

包括：饮料父抽象类(抽象组件)，调料装饰者抽象类（抽象装饰者）， 具体饮料（未加调料）子类（具体组件），具体调料类（具体装饰者）

编写自己的Java I/O装饰者